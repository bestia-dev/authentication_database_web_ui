-- tier3_database_postgres/a2_migrate_mod/a2_migrate_constraint_foreign.sql_fn

select a2_migrate_function('a2_migrate_constraint_foreign',
$source_code$

create function a2_migrate_constraint_foreign(_table name, _column name, _table_ref name, _column_ref name)
returns text
-- alter table c1_hit_counter add constraint hit_counter_foreign_webpage foreign key (webpage_id) references webpage (id);
-- alter table c1_hit_counter drop constraint hit_counter_foreign_webpage;
-- select a2_migrate_constraint_foreign('c1_hit_counter','webpage_id','webpage', 'id');
as
$$
declare 
    -- use only lowercase names, for later search and order as utf-8. No collation for technical strings.
    _table name = lower(_table);
    _column name = lower(_column);
    _table_ref name=lower(_table_ref);
    _column_ref name=lower(_column_ref);

    _constraint_name text := format('%I_foreign_%I', _table, _column);
    _ddl_statement text := format('alter table %I add constraint %I foreign key (%I) references %I (%I)', _table, _constraint_name, _column, _table_ref, _column_ref );
begin

    if not exists(
            select *
            from a1_list_all_constraints_foreign c            
            where c.table_name = _table and c.constraint_name = _constraint_name
    ) then        
        execute _ddl_statement;
        return format('Added constraint %s', _constraint_name);
    end if;
    return format('Up to date Constraint: %I', _constraint_name);
end;
$$ language plpgsql;

$source_code$);
