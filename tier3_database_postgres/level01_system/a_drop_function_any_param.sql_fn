-- tier3_database_postgres/level01_system/a_drop_function_any_param.sql_fn

-- select a_drop_function_any_param('a_drop_function_any_param');

select a_migrate_function('a_drop_function_any_param',
$source_code$

CREATE FUNCTION a_drop_function_any_param(_name name)
RETURNS text
AS
-- drop all functions with given _name regardless of function parameters
-- test it: create function test1. Then 
-- select a_drop_function_any_param('test1');   
-- drop function a_drop_function_any_param;
-- psql -U admin -h localhost -p 5432 -d webpage_hit_counter -f tier3_database_postgres/level01_system/a_drop_function_any_param.sql
$$
DECLARE
   _sql text;
   _functions_dropped int;
BEGIN
   SELECT count(*)::int
        , 'DROP FUNCTION ' || string_agg(oid::regprocedure::text, '; DROP FUNCTION ')
   FROM   pg_catalog.pg_proc
   WHERE  proname = _name
   AND    pg_function_is_visible(oid)  -- restrict to current search_path
   INTO   _functions_dropped, _sql;     -- count only returned if subsequent DROPs succeed

   IF _functions_dropped > 0 THEN       -- only if function(s) found
     EXECUTE _sql;
     return _sql;
   END IF;
   return '';
END;
$$ LANGUAGE plpgsql;

$source_code$);
