-- tier3_database_postgres/level01_system/a_migrate_column.sql_fn

select a_migrate_function('a_migrate_column',
$source_code$

CREATE FUNCTION a_migrate_column(_table name, _column name, _definition text)
RETURNS text 
AS
-- checks in the a_source_code if the column is already installed
-- if is equal, nothing happens
-- else write an error, because we cannot just drop a column !
-- finally insert/update into a_source_code  
-- ALTER TABLE webpage ADD COLUMN webpage_txt varchar(100) NOT NULL;
-- ALTER TABLE webpage ALTER COLUMN webpage_txt varchar(100) NOT NULL;
-- psql -U admin -h localhost -p 5432 -d webpage_hit_counter -f tier3_database_postgres/level01_system/a_migrate_column.sql_fn
$$
DECLARE
   _object_name text :=  format('%I.%I', _table, _column);
   _old_definition text;
   _x_void text;
BEGIN
   -- TODO: transform information_schema.columns into SQL statement

   if not exists(select * from a_source_code a where a.object_name = _object_name) then
      if exists(select * from information_schema.columns c WHERE c.table_schema = 'public' and c.table_name=_table and c.column_name=_column) then
         -- TODO: check if the column is correct
      else
         EXECUTE format('ALTER TABLE %I ADD COLUMN %I %;', _table, _column, _definition);
      end if;

      insert into a_source_code (object_name, definition)
      values (_object_name, _definition);

      return format('Inserted column: %I', _object_name);
   else
      select a.definition 
      into _old_definition
      from a_source_code a
      where a.object_name = _object_name;

      if _definition <> _old_definition then
         if exists(select * from information_schema.columns c WHERE c.table_schema = 'public' and c.table_name=_table and c.column_name=_column) then
            -- TODO: check if the column is correct
         end if;
         
         EXECUTE format('ALTER TABLE %I ALTER COLUMN %I %;', _table, _column, _definition);
                  
         update a_source_code
         set definition = _definition
         where object_name = _object_name;

         return format('Updated column: %I', _object_name);
      end if;

   end if;
   return format('Column up to date: %I', _object_name);
END;
$$ LANGUAGE plpgsql;

$source_code$);
