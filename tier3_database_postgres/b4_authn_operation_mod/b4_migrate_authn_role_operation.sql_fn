-- tier3_database_postgres/b4_authn_role_operation_mod/b4_migrate_authn_role_operation.sql_fn

select a2_migrate_function('b4_migrate_authn_role_operation',
$source_code$

create function  b4_migrate_authn_role_operation(
_b3_authn_role_id int4,
_b4_authn_operation_id int4)
returns text
as
$$
declare
 _b4_authn_role_operation_id int4;
begin

if not exists(select * 
    from b4_authn_role_operation a
    where a.b3_authn_role_id = _b3_authn_role_id
    and a.b4_authn_operation_id = _b4_authn_operation_id) then

    perform b4_authn_role_operation_insert(_b3_authn_role_id, _b4_authn_operation_id);
    return format('Inserted role_operation: %s %s', _b3_authn_role_id,_b4_authn_operation_id);
end if;

return format('Up to date role_operation: %s %s', _b3_authn_role_id,_b4_authn_operation_id);

end; 
$$ language plpgsql;

$source_code$);